//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3
#define TVP1 4
#define TVP2 5

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
};

/ {
    combos {
        compatible = "zmk,combos";

        galgaming {
            bindings = <&tog 7>;
            key-positions = <33 20>;
        };

        qwertgaming {
            bindings = <&tog 6>;
            key-positions = <32 20>;
        };

        arrowgaming {
            bindings = <&tog 8>;
            key-positions = <34 20>;
        };

        ant {
            bindings = <&tog 10>;
            key-positions = <25 20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        base {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "BASE";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃     Q     ┃     W     ┃     F     ┃     P     ┃     G     ┃   ┃     J     ┃     L     ┃     U     ┃     Y     ┃     ;     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃     A     ┃     R     ┃     S     ┃     T     ┃     D     ┃   ┃     H     ┃     N     ┃     E     ┃     I     ┃     O     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃     Q     ┃     Z     ┃     X     ┃     C     ┃     V     ┃     B     ┃   ┃     K     ┃     M     ┃     ,     ┃     .     ┃     /     ┃     \     ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃    DEL    ┃    TAB    ┃    SPC    ┃   ┃   ENTER   ┃           ┃   BSPC    ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
              &kp B           &kp L       &kp D         &kp C        &kp V        &kp J        &kp Y            &kp O         &kp U       &kp COMMA
              &mt LEFT_GUI N  &mt LALT R  &mt LCTRL T   &mt LSHFT S  &kp G        &kp P        &mt RSHFT H      &mt RCTRL A   &mt RALT E  &mt RIGHT_GUI I
&kp CAPSLOCK  &kp X           &kp Q       &kp M         &kp W        &kp Z        &kp K        &kp F            &kp APOS      &kp SEMI    &kp PERIOD       &kp CAPSLOCK
                                          &lt 5 ESCAPE  &lt 1 SPACE  &lt 4 TAB    &lt 3 ENTER  &lt 2 BACKSPACE  &lt 9 DELETE
            >;
        };

        numright {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "NAVI";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃           ┃           ┃     UP    ┃           ┃     {     ┃   ┃     }     ┃     7     ┃     8     ┃     9     ┃     +     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃   SHIFT   ┃   LEFT    ┃    DOWN   ┃   RIGHT   ┃     [     ┃   ┃     ]     ┃     4     ┃     5     ┃     6     ┃     -     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃           ┃           ┃   P UP    ┃  C LOCK   ┃  P DOWN   ┃     (     ┃   ┃     )     ┃     1     ┃     2     ┃     3     ┃     *     ┃           ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃           ┃    TAB    ┃    SPC    ┃   ┃    DEL    ┃     0     ┃           ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
        &trans        &trans        &trans     &trans          &none     &trans  &kp KP_N7        &kp KP_N8  &kp KP_N9  &trans
        &kp LEFT_GUI  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &trans    &trans  &kp KP_N4        &kp KP_N5  &kp KP_N6  &trans
&trans  &trans        &trans        &trans     &trans          &none     &trans  &kp KP_N1        &kp KP_N2  &kp KP_N3  &trans  &trans
                                    &trans     &trans          &trans    &trans  &kp KP_NUMBER_0  &trans
            >;
        };

        navleft {
            label = "NAV";
            bindings = <
        &kp SCROLLLOCK   &kp END   &kp INS         &kp PG_UP      &none        &trans  &trans           &trans     &trans         &trans
        &kp PRINTSCREEN  &kp LEFT  &kp UP_ARROW    &kp RIGHT      &none        &trans  &kp RIGHT_SHIFT  &kp RCTRL  &kp RIGHT_ALT  &kp RIGHT_GUI
&trans  &kp KP_NUMLOCK   &kp HOME  &kp DOWN_ARROW  &kp PG_DN      &none        &trans  &trans           &trans     &trans         &trans         &trans
                                   &kp DELETE      &kp BACKSPACE  &kp ENTER    &trans  &trans           &trans
            >;
        };

        symleft {
            label = "SYM";
            bindings = <
        &kp TILDE       &kp AT           &kp HASH          &kp DLLR           &none            &none   &trans           &trans     &trans         &trans
        &kp ASTERISK    &kp PLUS         &kp MINUS         &kp EQUAL          &kp AMPERSAND    &trans  &kp RIGHT_SHIFT  &kp RCTRL  &kp RIGHT_ALT  &kp RIGHT_GUI
&trans  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &none            &none   &trans           &trans     &trans         &trans         &trans
                                         &trans            &trans             &none            &trans  &trans           &trans
            >;
        };

        symright {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "SYMR";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃     !     ┃     @     ┃     #     ┃     $     ┃     %     ┃   ┃     ˆ     ┃     &     ┃     Ü     ┃     '     ┃     "     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃     Ä     ┃           ┃    SZ     ┃           ┃           ┃   ┃   MUTE    ┃   YEN     ┃   EURO    ┃  POUND    ┃     Ö     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃           ┃  EMAIL1   ┃  EMAIL2   ┃           ┃           ┃           ┃   ┃   VOL-    ┃   VOL+    ┃   LAST    ┃   NEXT    ┃     \     ┃           ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃           ┃    GIF    ┃    ADJ    ┃   ┃           ┃           ┃           ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
        &trans        &trans        &trans     &trans          &none     &none                 &kp PERCENT            &kp CARET      &kp GRAVE      &kp PIPE
        &kp LEFT_GUI  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &trans    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDER      &kp QUESTION   &kp EXCL
&trans  &trans        &trans        &trans     &trans          &none     &none                 &kp SLASH              &kp BACKSLASH  &kp LESS_THAN  &kp GREATER_THAN  &trans
                                    &trans     &trans          &none     &trans                &trans                 &trans
            >;
        };

        funright {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "FUNr";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃   RESET   ┃ BT CLEAR  ┃  OUT TOG  ┃           ┃           ┃   ┃           ┃    F7     ┃    F8     ┃    F9     ┃    F12    ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃ BOOTLOAD  ┃ BT NEXT   ┃           ┃           ┃           ┃   ┃           ┃    F4     ┃    F5     ┃    F6     ┃    F11    ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃           ┃           ┃ BT PREV   ┃           ┃           ┃           ┃   ┃           ┃    F1     ┃    F2     ┃    F3     ┃    F10    ┃           ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃           ┃           ┃           ┃   ┃           ┃           ┃           ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
        &trans        &trans        &trans            &trans          &trans    &trans  &kp F7  &kp F8  &kp F9  &kp F12
        &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &trans    &trans  &kp F4  &kp F5  &kp F6  &kp F11
&trans  &trans        &trans        &trans            &trans          &trans    &trans  &kp F1  &kp F2  &kp F3  &kp F10  &trans
                                    &trans            &trans          &trans    &trans  &trans  &trans
            >;
        };

        gamingqwerty {
            bindings = <
              &kp U      &kp Q  &kp E       &kp R      &kp DOLLAR    &kp T      &kp Y          &kp P       &kp I      &kp O
              &kp LCTRL  &kp A  &kp W       &kp D      &kp F         &kp G      &kp H          &kp J       &kp K      &kp L
&kp LEFT_GUI  &kp M      &kp Z  &kp S       &kp C      &kp V         &kp B      &kp N          &kp M       &kp COMMA  &kp DOT  &kp CAPSLOCK
                                &kp ESCAPE  &kp SPACE  &kp LSHFT     &kp ENTER  &kp BACKSPACE  &kp DELETE
            >;
        };

        gaminggallium {
            label = "lase";
            bindings = <
                  &kp B  &kp L  &kp D         &kp C      &kp V             &kp J        &kp Y          &kp O         &kp U     &kp COMMA
                  &kp N  &kp R  &kp T         &kp S      &kp G             &kp P        &kp H          &kp A         &kp E     &kp I
&kp LEFT_CONTROL  &kp X  &kp Q  &kp M         &kp W      &kp Z             &kp K        &kp F          &kp APOS      &kp SEMI  &kp PERIOD  &kp LEFT_GUI
                                &lt 1 ESCAPE  &kp SPACE  &kp LEFT_SHIFT    &lt 3 ENTER  &kp BACKSPACE  &lt 2 DELETE
            >;
        };

        gamingarrow {
            bindings = <
              &kp TAB    &kp Z           &kp Q           &kp C            &kp M        &trans  &trans  &trans  &trans  &trans
              &kp LSHFT  &kp LEFT_ARROW  &kp UP_ARROW    &kp RIGHT_ARROW  &kp N        &trans  &trans  &trans  &trans  &trans
&kp LEFT_GUI  &kp ESC    &kp X           &kp DOWN_ARROW  &kp V            &kp B        &trans  &trans  &trans  &trans  &trans  &trans
                                         &kp LCTRL       &kp SPACE        &kp LSHFT    &trans  &trans  &trans
            >;
        };

        medialeft {
            bindings = <
        &trans      &trans        &trans      &trans            &trans        &trans  &trans  &trans  &trans  &trans
        &kp C_MUTE  &kp C_VOL_DN  &kp C_STOP  &kp C_VOL_UP      &trans        &trans  &trans  &trans  &trans  &trans
&trans  &trans      &trans        &trans      &trans            &trans        &trans  &trans  &trans  &trans  &trans  &trans
                                  &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT    &trans  &trans  &trans
            >;
        };

        art {
            bindings = <
                   &kp LC(T)  &kp LC(D)  &kp LEFT_BRACKET   &kp LC(PLUS)   &kp LA(LEFT_BRACKET)     &trans  &trans  &trans  &trans  &trans
                   &kp I      &kp L      &kp B              &kp LC(EQUAL)  &kp LC(LS(N))            &trans  &trans  &trans  &trans  &trans
&kp LC(LS(COMMA))  &kp LC(I)  &kp V      &kp RIGHT_BRACKET  &kp LC(MINUS)  &kp LA(RIGHT_BRACKET)    &trans  &trans  &trans  &trans  &trans  &trans
                                         &kp LC(S)          &kp LC(Z)      &kp LC(LS(Z))            &trans  &trans  &trans
            >;
        };
    };
};
